// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// DoctorsColumns holds the columns for the "doctors" table.
	DoctorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "doctor_name", Type: field.TypeString},
		{Name: "doctor_email", Type: field.TypeString, Unique: true},
	}
	// DoctorsTable holds the schema information for the "doctors" table.
	DoctorsTable = &schema.Table{
		Name:        "doctors",
		Columns:     DoctorsColumns,
		PrimaryKey:  []*schema.Column{DoctorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// MedicinesColumns holds the columns for the "medicines" table.
	MedicinesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "medicine_name", Type: field.TypeString},
	}
	// MedicinesTable holds the schema information for the "medicines" table.
	MedicinesTable = &schema.Table{
		Name:        "medicines",
		Columns:     MedicinesColumns,
		PrimaryKey:  []*schema.Column{MedicinesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// MmedicinesColumns holds the columns for the "mmedicines" table.
	MmedicinesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "mmedicine_name", Type: field.TypeString, Unique: true},
	}
	// MmedicinesTable holds the schema information for the "mmedicines" table.
	MmedicinesTable = &schema.Table{
		Name:        "mmedicines",
		Columns:     MmedicinesColumns,
		PrimaryKey:  []*schema.Column{MmedicinesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PatientsColumns holds the columns for the "patients" table.
	PatientsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "patient_name", Type: field.TypeString, Unique: true},
		{Name: "gender", Type: field.TypeString},
		{Name: "patient_phone", Type: field.TypeInt},
	}
	// PatientsTable holds the schema information for the "patients" table.
	PatientsTable = &schema.Table{
		Name:        "patients",
		Columns:     PatientsColumns,
		PrimaryKey:  []*schema.Column{PatientsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PrescriptionsColumns holds the columns for the "prescriptions" table.
	PrescriptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "datetime", Type: field.TypeTime},
		{Name: "Doctor_ID", Type: field.TypeInt, Nullable: true},
		{Name: "Mmedicine_ID", Type: field.TypeInt, Nullable: true},
		{Name: "Patient_ID", Type: field.TypeInt, Nullable: true},
		{Name: "Systemmember_ID", Type: field.TypeInt, Nullable: true},
	}
	// PrescriptionsTable holds the schema information for the "prescriptions" table.
	PrescriptionsTable = &schema.Table{
		Name:       "prescriptions",
		Columns:    PrescriptionsColumns,
		PrimaryKey: []*schema.Column{PrescriptionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "prescriptions_doctors_prescriptions",
				Columns: []*schema.Column{PrescriptionsColumns[2]},

				RefColumns: []*schema.Column{DoctorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "prescriptions_mmedicines_prescriptions",
				Columns: []*schema.Column{PrescriptionsColumns[3]},

				RefColumns: []*schema.Column{MmedicinesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "prescriptions_patients_prescriptions",
				Columns: []*schema.Column{PrescriptionsColumns[4]},

				RefColumns: []*schema.Column{PatientsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "prescriptions_systemmembers_prescriptions",
				Columns: []*schema.Column{PrescriptionsColumns[5]},

				RefColumns: []*schema.Column{SystemmembersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SystemmembersColumns holds the columns for the "systemmembers" table.
	SystemmembersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "systemmember_name", Type: field.TypeString},
		{Name: "password", Type: field.TypeString, Unique: true, Size: 8},
	}
	// SystemmembersTable holds the schema information for the "systemmembers" table.
	SystemmembersTable = &schema.Table{
		Name:        "systemmembers",
		Columns:     SystemmembersColumns,
		PrimaryKey:  []*schema.Column{SystemmembersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DoctorsTable,
		MedicinesTable,
		MmedicinesTable,
		PatientsTable,
		PrescriptionsTable,
		SystemmembersTable,
	}
)

func init() {
	PrescriptionsTable.ForeignKeys[0].RefTable = DoctorsTable
	PrescriptionsTable.ForeignKeys[1].RefTable = MmedicinesTable
	PrescriptionsTable.ForeignKeys[2].RefTable = PatientsTable
	PrescriptionsTable.ForeignKeys[3].RefTable = SystemmembersTable
}
